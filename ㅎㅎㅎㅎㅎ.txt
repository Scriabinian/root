@실수(소수) 표현 방법

1.고정 소수점
고정된 소수점 위치를 가진다.
소수점 이하의 숫자들은 항상 일정한 자리수를 가진다.
123.45
정수와 소수부분을 쉽게 나눌 수 있다.
큰범위의 숫자를 표현하긴 X

2. 부동 소수점(=고정X)
소수점의 위치가 고정되어 있지 않다.
flaot : 8개 소수점 표현
double : 11개 소수점 표현

3.문자형 char  = 2byte(숫자로 표현)
아스키 코드/유니코드==변경해서 사용한다.
1. 작은 따옴표로 묶어서 저장한당.
char ch1 = "A"; X => 'A'; => 아스키 코드 65번찾기.
char ch3 = ' ';//에러 공백X
3.문자 그대로 저장되는게 아니다
 유니코드(==2byte==65535문자)/아스키코드로 변환된다.
4.캐릭터는 한가지 문자로만 표현된다.

4. 기본 논리형 표현(=boolean) = 1byte;
값의 범위는 : true/false;
boolean gender = true;

5. 참조 자료형
1)기본 자료형(정수 : int long byte/ 실수:float
double/문자:char)과 참조자료형 = 값을 저장.
*stack 메모리 공간을 할당 받아 저장.
2)참조 자료형 = 주소저장하는 방식 <- 메모리 *heap 영역 이다.
...
6. 자료형 변환(==자료형 자료형끼리 선언) X
연산을 수행할 때 마지막 연산값을 저장한다.
*변수가 가진 자료형을 다른 자료형으로 변환하는 방식(==형변환)

@자동형변환
서로 다른 자료형간의 대입이나 연산을 할 경우
자바의 컴파일러가 자동으로 형변환을 생략할 수 있다.
*자동 형변환 가능한 예시(데이터 손실이 없음)
-크기가 작은 자료형 (short<int)에서 큰 자료형으로 변환할 때
float ft = (int)100;
-정수형이 실수형으로 변환할 때
int  num1 =100;
double num2 = num1;
@강제 형변환
1. 큰 자료형의 변수를 작은 자료형으로 담아내는것.
2.데이터가 보존될 수 있거나 손실이 발생할 수 있다.
자료형 변수명 = (강제로 변환할 자료형)변수명;
int num1 = 10;
byte num2 = (byte)num1;

@데이터 입력 : 
//자바 라이브러리 import
import java.util.Scanner;
//스캐너 객체선언
Scanner input = new Scanner(System.in);
//값을 입력받기;;
int input_num = Scanner.nextInt();