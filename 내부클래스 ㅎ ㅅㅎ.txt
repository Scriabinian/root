클래스 안에 만들어진 다른 클래스를 중첩 클래스라고함.

독립적으로 선언하는것이 독립적으로 좋아느 특정 클래스 관계를 맺을 경우 중첩 클래스로 선언하는 것이 유지보수에 좋당. 코드의 복잡성을 감추기 위해서 멤버를 쉽게 사용할 수 있당.
외부클래스 : 자동차
내부클래스 : 엔진/기어/방향지시등/드라이브/핸들/

@내부클래스 종류
1)멤버클래스/로컬클래스
-인스턴스 멤버 클래스 : 외부 클 래스를 객체로 만들고 내부 클래스를 허용한당.
-정적 멤버 클라스 : 외부 클래스 객체로 ㅁ나들 필요가 없다. 내부 클래스를 허용한다.
[접근제한자]  class A{
	[접근제한자] class B{//내부클래스 : 엔진
	
	}
}

-정적 멤버 클래스 : 외부 클래스 객체로 만들 필요가 업당.
내부 클래스를 허용한다.
 A객체를 생성 하지 않아도  B라는 객체를 생성할 수 있당.
코드형식)
[접근제한자] class A{
	[접근제한자] static class B {
	}
}
내부클래스( static) : 외부 클래스에서 쓰는 인스턴스 멤버 변수 사용 할 수 없음.

-로컬 클래스 : 생성자/메서드를 통해서만 생성될 수 있다.
(local class : 내부 안에서 실행된다는거)
생성자나 메서드 내부 안에서 실행될때만 B객체를 생성한당.
외부클래스
class A{
	A(){//외부 클래스 생성자 호출가능
		class B{}
		B b = new B();//생성자 객체 생성 호출가능;;
	}
	void method(){//외부 클래스 메서드;;
		class B{}
		B b = new B();			
}

1.메서드나 생성자가 호출이 종료되면 지역클래스 인스턴스도 종료된다. =>특징;;
2.메서드 매개변수값이나 인스턴스 지역변수일 경우 내부 클래스 안에 들어갈때  final이라는 Reading only변수값으로 들어간다. JDK 17버전 이후로는 Final이  생략된 경우가 있어서 확인을 해봐야 함.
@내부클라스 접근 제한 ㅎ ㅅㅎ.
 1.외부 클래스 접근 제한.
중첩 클래스는 외부 클래스와 긴밀한 관계를 맺는당.
외부 클래스 멤버(필드.메서드)접근할 수 있당.
중첩 클라스가 어떻게 선언되느냐에 따라 접근 방법이 달라진당 ㅎ ㅅㅎ.
인스턴스 멤버 클래스  -> 외부 클래스 모든 필드와 메서드(정적/인스턴스)
정적 멤버 클래스 -> 외부 클래스의 정적 필드와 정적 메서드만
(외부 클래스 : 인스턴스 멤버 허용 X);
2.멤버 클래스 접근 제한자(private);
인스턴스 클래스를 private로 선언할 경우, getter를 통해서 클래스를 얻도록 할 수 있고, 내부클래스 접근제한자를 통해 제한가능하다.

@중첩 인터페이스 ㅎ ㅅㅎ.
안드로이드 버튼 클릭할때 이벤트에 대해 인터페이스를 만들 수 있당.
외부 클래스와 긴밀한 관계를 맺는 구현 객체를 만들기 위해서 선언한다.(버튼 인터페이스)
구현방법)
class A{//인터페이스로 접근하고 객체를 다양하게 접근하게 해서 구현부를 다르게 만드는것.
	//상수 필드
	//추상 메서드.
	//디폴트 메서드
	//정적 메서드.
	[접근제한자] interface B{//중첩 인터페이스 ㅎ ㅅㅎ.	
	}
}
필드에 다형성을 알 수 있고, 버튼을 어떤 객체를 주입할지 알지 못하고 객체를 주입할때 개발자가 주입할 수 있는 클래스를 만들어야한당.
@익명 클래스.
문제1:중첩 인터페이스르 이용한 버튼 개체 주입.
